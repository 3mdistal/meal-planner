---
import MainLayout from "@/layouts/main-layout.astro";
import { getCollection } from "astro:content";
import MealPlanner from "@/components/MealPlanner.astro";

const days = [
  "Monday",
  "Tuesday",
  "Wednesday",
  "Thursday",
  "Friday",
  "Saturday",
  "Sunday",
] as const;

type Day = (typeof days)[number];
type Meal = { main: string; sides: string[] };
type MealPlan = Record<Day, { breakfast: Meal; dinner: Meal }>;
type WeeklyItems = { snacks: string[]; desserts: string[]; fruits: string[] };

// Add this type definition
type Recipe = {
  id: string;
  collection: string;
  data: {
    $schema: string;
    type: string;
    name: string;
  };
};

const recipesCollection = await getCollection("recipes");
const alphabetizedRecipes = recipesCollection.sort((a, b) =>
  a.data.name.localeCompare(b.data.name)
);

// Modify these functions to map the recipes to the expected format
const mapRecipesToOptions = (recipes: Recipe[]) =>
  recipes.map((recipe) => ({ name: recipe.data.name }));

const breakfastRecipes = mapRecipesToOptions(
  alphabetizedRecipes.filter((recipe) => recipe.data.type === "breakfast")
);
const dinnerRecipes = mapRecipesToOptions(
  alphabetizedRecipes.filter((recipe) => recipe.data.type === "dinner")
);
const snacks = mapRecipesToOptions(
  alphabetizedRecipes.filter((recipe) => recipe.data.type === "snack")
);
const sides = mapRecipesToOptions(
  alphabetizedRecipes.filter((recipe) => recipe.data.type === "side")
);
const desserts = mapRecipesToOptions(
  alphabetizedRecipes.filter((recipe) => recipe.data.type === "dessert")
);
const fruits = mapRecipesToOptions(
  alphabetizedRecipes.filter((recipe) => recipe.data.type === "fruit")
);

const initialMealPlan: MealPlan = days.reduce((accumulator, day) => {
  accumulator[day] = {
    breakfast: { main: "", sides: [] },
    dinner: { main: "", sides: [] },
  };
  return accumulator;
}, {} as MealPlan);

const initialWeeklyItems: WeeklyItems = {
  snacks: [],
  desserts: [],
  fruits: [],
};
---

<MainLayout>
  <h1>Meal Planner</h1>
  <MealPlanner
    {days}
    {breakfastRecipes}
    {dinnerRecipes}
    {snacks}
    {sides}
    {desserts}
    {fruits}
    {initialMealPlan}
    {initialWeeklyItems}
  />
</MainLayout>
